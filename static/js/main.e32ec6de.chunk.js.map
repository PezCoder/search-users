{"version":3,"sources":["redux/users/users.js","redux/users/usersApi.js","components/search-bar/SearchBar.js","utilities/utilities.js","components/search-suggestion/SearchSuggestion.js","redux/search/search.js","components/search-suggestions/SearchSuggestions.js","components/search-no-results/SearchNoResults.js","constants.js","components/search-users/SearchUsers.js","App.js","serviceWorker.js","index.js","redux/store.js"],"names":["loadUsers","dispatch","Promise","resolve","then","users","type","payload","initialState","list","apiStatus","usersReducer","state","action","SearchBar","onChange","onKeyDown","useState","value","setValue","searchInputRef","useRef","useEffect","className","event","target","autoCapitalize","autoComplete","placeholder","ref","onClick","current","focus","caseInsensitiveFirstWordMatch","word","RegExp","replace","highlight","text","match","SearchSuggestion","title","subtitle","listItem","description","highlightWord","onMouseOver","onMouseMove","scrollIntoView","block","behavior","searchSuggestionClass","classnames","dangerouslySetInnerHTML","__html","suggestions","query","focusedIndex","disableMouseEvents","searchReducer","suggestionIndex","disable","updateFocusToIndex","updateDisableMouseEvents","SearchSuggestions","useSelector","search","shallowEqual","useDispatch","map","index","key","SearchNoResults","eventKeys","debounce","require","findWord","mapUserToSuggestion","user","isFoundInList","searchQuery","id","name","address","SearchUsers","searchSuggestions","setSearchSuggestions","useCallback","updateSearchSuggestions","setSearchQuery","handleOnChange","trim","reduce","acc","items","filter","item","length","filterSearchSuggestions","noSearchResults","Fragment","getState","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","store","createStore","combineReducers","applyMiddleware","thunk","configureStore","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gbAEO,IAGMA,EAAY,kBAAM,SAAAC,GCFtBC,QAAQC,QAAQ,CACrB,CACE,GAAM,aACN,KAAQ,cACR,MAAS,CAAC,SAAU,UACpB,QAAW,qCACX,QAAW,UAEb,CACE,GAAM,aACN,KAAQ,aACR,MAAS,CAAC,eACV,QAAW,2BACX,QAAW,UAEb,CACE,GAAM,aACN,KAAQ,mBACR,MAAS,CAAC,UACV,QAAW,qBACX,QAAW,UAEb,CACE,GAAM,aACN,KAAQ,aACR,MAAS,CAAC,cACV,QAAW,gBACX,QAAW,UAEb,CACE,GAAM,aACN,KAAQ,iBACR,MAAS,CAAC,mBACV,QAAW,qBACX,QAAW,UAEb,CACE,GAAM,aACN,KAAQ,eACR,MAAS,CAAC,UACV,QAAW,sCACX,QAAW,UAEb,CACE,GAAM,aACN,KAAQ,WACR,MAAS,CAAC,cAAe,SACzB,QAAW,gBACX,QAAW,UAEb,CACE,GAAM,aACN,KAAQ,eACR,MAAS,CAAC,gBACV,QAAW,sCACX,QAAW,UAEb,CACE,GAAM,aACN,KAAQ,eACR,MAAS,CAAC,UACV,QAAW,qBACX,QAAW,YD3DFC,MAAK,SAAAC,GAChBJ,EAAS,CACPK,KAL4B,qBAM5BC,QAASF,SAKTG,EAAe,CACnBC,KAAM,GACNC,UAAW,MAGE,SAASC,IAAiD,IAApCC,EAAmC,uDAA3BJ,EAAcK,EAAa,uDAAJ,GAClE,OAAQA,EAAOP,MACb,IAlB8B,qBAmB5B,OAAO,2BACFM,GADL,IAEEH,KAAK,YAAKI,EAAON,SACjBG,UAAW,YAGf,QACE,OAAO,eAAKE,I,kBEqBHE,MA9Cf,YAA6C,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UAAa,EAChBC,mBAAS,IADO,mBACnCC,EADmC,KAC5BC,EAD4B,KAEpCC,EAAiBC,iBAAO,MAe9B,OAbAC,qBACE,WACEP,GAAYA,EAASG,KAEvB,CAACA,EAAOH,IAUR,yBAAKQ,UAAU,cACb,uBAAGA,UAAU,0CACb,2BACEA,UAAU,oBACVjB,KAAK,OACLY,MAAOA,EACPH,SAAU,SAAAS,GAAK,OAAIL,EAASK,EAAMC,OAAOP,QACzCF,UAAWA,EACXU,eAAe,MACfC,aAAa,MACbC,YAAY,kCACZC,IAAKT,IAENF,GACC,uBACEK,UAAU,sCACVO,QAvBR,WACEX,EAAS,IACTJ,EAAS,IACTK,EAAeW,QAAQC,a,iBCbpB,SAASC,EAA8BC,GAC5C,OAAO,IAAIC,OACaD,EALbE,QAAQ,wBAAyB,QAM1C,K,MCFJ,SAASC,EAAUC,EAAMJ,GAMvB,OALwBI,EAAKF,QAC3BH,EAA8BC,IAC9B,SAAAK,GAAK,2DAAkDA,EAAlD,cAMT,IA8DeC,EA9DU,SAAC,GASnB,IARLC,EAQI,EARJA,MACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,SACAC,EAKI,EALJA,YACAC,EAII,EAJJA,cACAb,EAGI,EAHJA,MACAc,EAEI,EAFJA,YACAC,EACI,EADJA,YAEMlB,EAAMR,iBAAO,MACnBC,qBAAU,WACRU,GAASH,EAAIE,SACXF,EAAIE,QAAQiB,gBACZnB,EAAIE,QAAQiB,eAAe,CACzBC,MAAO,SACPC,SAAU,aAEb,CAAClB,IAEJ,IAAMmB,EAAwBC,IAC5B,oBACA,CAAE,MAASpB,IAGb,OACE,6BACET,UAAW4B,EACXL,YAAaA,EACbjB,IAAKA,EACLkB,YAAaA,GAEb,wBACExB,UAAU,2BACV8B,wBAAyB,CAAEC,OAAQjB,EAAUI,EAAOI,MACtD,uBACEtB,UAAU,8BACV8B,wBAAyB,CAAEC,OAAQjB,EAAUK,EAAUG,MACvDF,GACA,wBAAIpB,UAAU,2BACZ,4BACE,uBAAGA,UAAU,kBAAqBoB,IAIxC,uBACEpB,UAAU,iCACV8B,wBAAyB,CAAEC,OAAQjB,EAAUO,EAAaC,QCvD5DrC,G,MAAe,CACnB+C,YAAa,KACbC,MAAO,GACPC,aAAc,KACdC,oBAAoB,IAGP,SAASC,IAAkD,IAApC/C,EAAmC,uDAA3BJ,EAAcK,EAAa,uDAAJ,GACnE,OAAQA,EAAOP,MACb,IAhBqC,4BAiBnC,OAAO,2BACFM,GADL,IAEE2C,YAAa1C,EAAON,QAAQgD,cAGhC,IArB+B,sBAsB7B,OAAO,2BACF3C,GADL,IAEE4C,MAAO3C,EAAON,QAAQiD,QAG1B,IA1BiC,wBA2B/B,OAAO,2BACF5C,GADL,IAEE6C,aAAc5C,EAAON,QAAQqD,kBAGjC,IA7BsC,6BA8BpC,OAAO,2BACFhD,GADL,IAEE8C,mBAAoB7C,EAAON,QAAQsD,UAIvC,QACE,OAAO,eAAKjD,IAIX,IAqBMkD,EAAqB,SAACF,GAAD,MAAsB,CACtDtD,KAlEmC,wBAmEnCC,QAAS,CACPqD,qBAISG,EAA2B,SAACF,GAAD,MAAc,CACpDvD,KAtEwC,6BAuExCC,QAAS,CACPsD,aC7BWG,EAtCW,SAAC,GAAoC,IAAlCT,EAAiC,EAAjCA,YAAaV,EAAoB,EAApBA,cAAoB,EACfoB,aAC3C,SAAArD,GAAK,MAAK,CACR6C,aAAc7C,EAAMsD,OAAOT,aAC3BC,mBAAoB9C,EAAMsD,OAAOR,sBAEnCS,KALMV,EADoD,EACpDA,aAAcC,EADsC,EACtCA,mBAOhBzD,EAAWmE,cAEjB,OACE,yBAAK7C,UAAU,sBACZgC,EAAYc,KAAI,WAA6CC,GAA7C,IAAG7B,EAAH,EAAGA,MAAOG,EAAV,EAAUA,YAAaF,EAAvB,EAAuBA,SAAUC,EAAjC,EAAiCA,SAAjC,OACf,kBAAC,EAAD,CACEX,MAAOyB,IAAiBa,EACxBxB,YAAa,YACVY,GAAsBzD,EAAS6D,EAAmBQ,KAErDvB,YAAa,WACXW,GAAsBzD,EAAS8D,GAAyB,KAE1DlB,cAAeA,EACf0B,IAAK9B,EACLA,MAAOA,EACPC,SAAUA,EACVC,SAAUA,EACVC,YAAaA,S,MCpBR4B,MAZf,YAAmC,IAAT/B,EAAQ,EAARA,MACxB,OACE,6BAASlB,UAAU,qBACjB,uBAAGA,UAAU,4BAA4BkB,KCPlCgC,EACE,YADFA,EAEA,UCcTC,EAAWC,EAAQ,IA8EvB,SAASC,EAAStC,EAAMJ,GACtB,OAEM,OAFCI,EAAKC,MACVN,EAA8BC,IAyBlC,SAAS2C,EAAoBC,GAA2C,IAArCC,EAAoC,wDAAbC,EAAa,uCACrE,MAAO,CACLvC,MAAOqC,EAAKG,GACZvC,SAAUoC,EAAKI,KACfvC,SAAUoC,EAAa,WAAOC,EAAP,oBAAsC,KAC7DpC,YAAakC,EAAKK,QAClBtC,cAAemC,GAIJI,MAjHf,YAAkD,EAA3B9E,KAA2B,EAArBS,SAAqB,EAAXe,QAAY,IAC3C7B,EAAWmE,cAD+B,EAGEH,aAChD,SAAArD,GAAK,MAAK,CACRP,MAAOO,EAAMP,MAAMI,KACnBuE,YAAapE,EAAMsD,OAAOV,MAC1B6B,kBAAmBzE,EAAMsD,OAAOX,eAElCY,KANMa,EAHwC,EAGxCA,YAAaK,EAH2B,EAG3BA,kBAAmBhF,EAHQ,EAGRA,MASlCiF,EAAuBC,uBAC3B,SAAChC,GAAD,OAAiBtD,EJekB,SAACsD,GAAD,MAAkB,CACvDjD,KA/CuC,4BAgDvCC,QAAS,CACPgD,gBIlB0BiC,CAAwBjC,MAClD,CAACtD,IAGGwF,EAAiBF,uBACrB,SAACP,GAAD,OAAiB/E,EJwBwB,CAC3CK,KA5DiC,sBA6DjCC,QAAS,CACPiD,MI3B4CwB,OAC5C,CAAC/E,IAIHqB,qBAAU,WACRrB,EAASD,OACR,CAACC,IAEJ,IAAMyF,EAAiBH,sBAKrBb,GAAS,SAAAxD,GACFA,EAAMyE,QAKXF,EAAevE,GACfoE,EA2CN,SAAiCjF,EAAO2E,GACtC,OAAO3E,EAAMuF,QAAO,SAACC,EAAKf,GAExB,IAAMC,EAAgBD,EAAKgB,MAAMC,QAAO,SAAAC,GAAI,OAAIpB,EAASoB,EAAMhB,MAAciB,OAAS,EACtF,OACErB,EAASE,EAAKG,GAAID,IAClBJ,EAASE,EAAKI,KAAMF,IACpBJ,EAASE,EAAKK,QAASH,IACvBD,EAEM,GAAN,mBACKc,GADL,CAEEhB,EAAoBC,EAAMC,EAAeC,KAKtCa,IACN,IA5DGK,CAAwB7F,EAAOa,KAN/BoE,EAAqB,QAQtB,KACH,CAACjF,IAcH,IAAKA,EAAM4F,OACT,OAAO,KAGT,IAAME,EAAmBnB,GAAeK,GAAkD,IAA7BA,EAAkBY,OAE/E,OACE,kBAAC,IAAMG,SAAP,KACE,kBAAC,EAAD,CAAWrF,SAAU2E,EAAgB1E,UAlBzC,SAAuBQ,GACjBA,EAAM+C,MAAQE,GAChBxE,EAAS8D,GAAyB,IAClC9D,GJamC,SAACA,EAAUoG,GAAc,IACxDnC,EAAWmC,IAAXnC,OACAT,EAA8BS,EAA9BT,aAAcF,EAAgBW,EAAhBX,YAGtB,OAAKA,GAAgBA,EAAY0C,OAMxBhG,EAFuBwD,IAAiBF,EAAY0C,OAAS,EAEpDnC,EAAmB,GAGrBA,EACG,OAAjBL,EAAwB,EAAIA,EAAe,IATpCxD,EAAS6D,EAAmB,WIlBxBtC,EAAM+C,MAAQE,IACvBxE,EAAS8D,GAAyB,IAClC9D,GJ6BuC,SAACA,EAAUoG,GAAc,IAC5DnC,EAAWmC,IAAXnC,OACAT,EAA8BS,EAA9BT,aAAcF,EAAgBW,EAAhBX,YAGtB,OAAKA,GAAgBA,EAAY0C,OAMxBhG,EAAS6D,EAFgC,IAAjBL,GAMd,OAAjBA,EAJmCF,EAAY0C,OAAS,EAIPxC,EAAc,IATxDxD,EAAS6D,EAAmB,cIrB/BuB,GAAqB,kBAAC,EAAD,CACnB9B,YAAa8B,EAAmBxC,cAAemC,IAEjDmB,GAAmB,kBAAC,EAAD,CAAiB1D,MAAM,oBCtEnC6D,MAZf,WACE,OACE,8BACE,wBAAI/E,UAAU,QAAd,gBACA,uBAAGA,UAAU,gBAAb,2EACA,6BAASA,UAAU,UACjB,kBAAC,EAAD,S,eCAYgF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnE,MACvB,2DCVNoE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUC,MCLC,WAA0C,IAAlBtG,EAAiB,uDAAJ,GAClD,OAAOuG,YACLC,YAAgB,CACd3G,MAAOM,EACPuD,OAAQP,IAEVnD,EACAyG,YAAgBC,MDFCC,IACf,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpH,MAAK,SAAAqH,GACjCA,EAAaC,kB","file":"static/js/main.e32ec6de.chunk.js","sourcesContent":["import {fetchUsers} from \"./usersApi\";\n\nexport const LOAD_USERS = 'LOAD_USERS';\nexport const LOAD_USERS_SUCCESS = 'LOAD_USERS_SUCCESS';\n\nexport const loadUsers = () => dispatch => {\n  fetchUsers().then(users => {\n    dispatch({\n      type: LOAD_USERS_SUCCESS,\n      payload: users,\n    });\n  });\n};\n\nconst initialState = {\n  list: [],\n  apiStatus: null,\n};\n\nexport default function usersReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case LOAD_USERS_SUCCESS:\n      return {\n        ...state,\n        list: [...action.payload],\n        apiStatus: 'success',\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","// Note: This is mocked for demonstration purposes, this can later\n// be replaced by any API calls using agents like axios/superagent etc.\nexport function fetchUsers() {\n  return Promise.resolve([\n    {\n      \"id\": \"123-s2-546\",\n      \"name\": \"John Jacobs\",\n      \"items\": [\"bucket\", \"bottle\"],\n      \"address\": \"1st Cross, 9th Main, abc Apartment\",\n      \"pincode\": \"5xx012\"\n    },\n    {\n      \"id\": \"123-s3-146\",\n      \"name\": \"David Mire\",\n      \"items\": [\"Bedroom Set\"],\n      \"address\": \"2nd Cross, BTI Apartment\",\n      \"pincode\": \"4xx012\"\n    },\n    {\n      \"id\": \"223-a1-234\",\n      \"name\": \"Soloman Marshall\",\n      \"items\": [\"bottle\"],\n      \"address\": \"Riverbed Apartment\",\n      \"pincode\": \"4xx032\"\n    },\n    {\n      \"id\": \"121-s2-111\",\n      \"name\": \"Ricky Beno\",\n      \"items\": [\"Mobile Set\"],\n      \"address\": \"Sunshine City\",\n      \"pincode\": \"5xx072\"\n    },\n    {\n      \"id\": \"123-p2-246\",\n      \"name\": \"Sikander Singh\",\n      \"items\": [\"Air Conditioner\"],\n      \"address\": \"Riverbed Apartment\",\n      \"pincode\": \"4xx032\"\n    },\n    {\n      \"id\": \"b23-s2-321\",\n      \"name\": \"Ross Wheeler\",\n      \"items\": [\"Mobile\"],\n      \"address\": \"1st Cross, 9th Main, abc Apartement\",\n      \"pincode\": \"5xx012\"\n    },\n    {\n      \"id\": \"113-n2-563\",\n      \"name\": \"Ben Bish\",\n      \"items\": [\"Kitchen Set\", \"Chair\"],\n      \"address\": \"Sunshine City\",\n      \"pincode\": \"5xx072\"\n    },\n    {\n      \"id\": \"323-s2-112\",\n      \"name\": \"John Michael\",\n      \"items\": [\"Refrigerator\"],\n      \"address\": \"1st Cross, 9th Main, abc Apartement\",\n      \"pincode\": \"5xx012\"\n    },\n    {\n      \"id\": \"abc-34-122\",\n      \"name\": \"Jason Jordan\",\n      \"items\": [\"Mobile\"],\n      \"address\": \"Riverbed Apartment\",\n      \"pincode\": \"4xx032\"\n    }\n  ]\n  );\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './searchBar.scss';\n\nfunction SearchBar({ onChange, onKeyDown }) {\n  const [value, setValue] = useState('');\n  const searchInputRef = useRef(null);\n\n  useEffect(\n    () => {\n      onChange && onChange(value);\n    },\n    [value, onChange]\n  );\n\n  function onCrossClick() {\n    setValue('');\n    onChange('');\n    searchInputRef.current.focus();\n  }\n\n  return (\n    <div className=\"search-bar\">\n      <i className=\"fas fa-search search-bar__icon-search\"></i>\n      <input\n        className=\"search-bar__input\"\n        type=\"text\"\n        value={value}\n        onChange={event => setValue(event.target.value)}\n        onKeyDown={onKeyDown}\n        autoCapitalize=\"off\"\n        autoComplete=\"off\"\n        placeholder=\"Start typing like: Apartment...\"\n        ref={searchInputRef}\n      />\n      {value && (\n        <i\n          className=\"fas fa-times search-bar__icon-cross\"\n          onClick={onCrossClick}\n        />\n      )}\n    </div>\n  );\n}\n\nSearchBar.propTypes = {\n  onChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n};\n\nexport default SearchBar;\n","// https://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escapeStringForRegExp(str) {\n  return str.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&');\n}\n\nexport function caseInsensitiveFirstWordMatch(word) {\n  return new RegExp(\n    escapeStringForRegExp(word),\n    'i'\n  );\n}\n","import React, {useEffect, useRef} from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {caseInsensitiveFirstWordMatch} from '../../utilities/utilities';\nimport './searchSuggestion.scss';\n\nfunction highlight(text, word) {\n  const highlightedText = text.replace(\n    caseInsensitiveFirstWordMatch(word),\n    match => `<span class=\"search-suggestion__highlight\">${match}</span>`\n  );\n\n  return highlightedText;\n}\n\nconst SearchSuggestion = ({\n  title,\n  subtitle,\n  listItem,\n  description,\n  highlightWord,\n  focus,\n  onMouseOver,\n  onMouseMove,\n}) => {\n  const ref = useRef(null);\n  useEffect(() => {\n    focus && ref.current &&\n      ref.current.scrollIntoView &&\n      ref.current.scrollIntoView({\n        block: 'center',\n        behavior: \"smooth\"\n      });\n  }, [focus]);\n\n  const searchSuggestionClass = classnames(\n    'search-suggestion',\n    { 'focus': focus }\n  );\n\n  return (\n    <article\n      className={searchSuggestionClass}\n      onMouseOver={onMouseOver}\n      ref={ref}\n      onMouseMove={onMouseMove}\n    >\n      <h4\n        className=\"search-suggestion__title\"\n        dangerouslySetInnerHTML={{ __html: highlight(title, highlightWord) }} />\n      <p\n        className=\"search-suggestion__subtitle\"\n        dangerouslySetInnerHTML={{ __html: highlight(subtitle, highlightWord) }} />\n      { listItem && (\n        <ul className=\"search-suggestion__list\">\n          <li>\n            <i className=\"fas fa-circle\"></i>{listItem}\n          </li>\n        </ul>\n      )}\n      <p\n        className=\"search-suggestion__description\"\n        dangerouslySetInnerHTML={{ __html: highlight(description, highlightWord) }} />\n    </article>\n  );\n};\n\nSearchSuggestion.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  listItem: PropTypes.string,\n  description: PropTypes.string,\n  highlightWord: PropTypes.string,\n  onMouseOver: PropTypes.func,\n  onMouseMove: PropTypes.func,\n};\n\nexport default SearchSuggestion;\n","export const UPDATE_SEARCH_SUGGESTIONS = 'UPDATE_SEARCH_SUGGESTIONS';\nexport const UPDATE_SEARCH_QUERY = 'UPDATE_SEARCH_QUERY';\nexport const UPDATE_FOCUS_TO_INDEX = 'UPDATE_FOCUS_TO_INDEX';\nexport const FOCUS_NEXT_SUGGESTION = 'FOCUS_NEXT_SUGGESTION';\nexport const FOCUS_PREVIOUS_SUGGESTION = 'FOCUS_PREVIOUS_SUGGESTION';\nexport const UPDATE_DISABLE_MOUSE_EVENT = 'UPDATE_DISABLE_MOUSE_EVENT';\n\nconst initialState = {\n  suggestions: null,\n  query: '',\n  focusedIndex: null,\n  disableMouseEvents: false,\n};\n\nexport default function searchReducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case UPDATE_SEARCH_SUGGESTIONS:\n      return {\n        ...state,\n        suggestions: action.payload.suggestions,\n      };\n\n    case UPDATE_SEARCH_QUERY:\n      return {\n        ...state,\n        query: action.payload.query,\n      };\n\n    case UPDATE_FOCUS_TO_INDEX:\n      return {\n        ...state,\n        focusedIndex: action.payload.suggestionIndex,\n      };\n\n    case UPDATE_DISABLE_MOUSE_EVENT:\n      return {\n        ...state,\n        disableMouseEvents: action.payload.disable,\n      };\n\n\n    default:\n      return { ...state };\n  }\n}\n\nexport const updateSearchSuggestions = (suggestions) => ({\n  type: UPDATE_SEARCH_SUGGESTIONS,\n  payload: {\n    suggestions\n  },\n});\n\nexport const disableMouseEvents = (suggestions) => ({\n  type: UPDATE_SEARCH_SUGGESTIONS,\n  payload: {\n    suggestions\n  },\n});\n\nexport const updateSearchQuery = (query) => ({\n  type: UPDATE_SEARCH_QUERY,\n  payload: {\n    query\n  },\n});\n\nexport const updateFocusToIndex = (suggestionIndex) => ({\n  type: UPDATE_FOCUS_TO_INDEX,\n  payload: {\n    suggestionIndex\n  },\n});\n\nexport const updateDisableMouseEvents = (disable) => ({\n  type: UPDATE_DISABLE_MOUSE_EVENT,\n  payload: {\n    disable\n  },\n});\n\nexport const focusNextSuggestion = () => (dispatch, getState) => {\n  const { search } = getState();\n  const { focusedIndex, suggestions } = search;\n\n  // If no suggestions, reset the index\n  if (!suggestions || !suggestions.length) {\n    return dispatch(updateFocusToIndex(null));\n  }\n\n  const isLastSuggestionFocused = focusedIndex === suggestions.length - 1;\n  if (isLastSuggestionFocused) {\n    return dispatch(updateFocusToIndex(0));\n  }\n\n  return dispatch(updateFocusToIndex(\n    focusedIndex === null ? 0 : focusedIndex + 1\n  ));\n};\n\nexport const focusPreviousSuggestion = () => (dispatch, getState) => {\n  const { search } = getState();\n  const { focusedIndex, suggestions } = search;\n\n  // If no suggestions, reset the index\n  if (!suggestions || !suggestions.length) {\n    return dispatch(updateFocusToIndex(null));\n  }\n\n  const isFirstSuggestionFocused = focusedIndex === 0;\n  if (isFirstSuggestionFocused) {\n    return dispatch(updateFocusToIndex(suggestions.length - 1));\n  }\n\n  return dispatch(updateFocusToIndex(\n    focusedIndex === null ? suggestions.length - 1 : focusedIndex -1\n  ));\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchSuggestion from '../search-suggestion/SearchSuggestion';\nimport './searchSuggestions.scss';\nimport {useSelector, useDispatch, shallowEqual} from 'react-redux';\nimport {\n  updateFocusToIndex,\n  updateDisableMouseEvents\n} from '../../redux/search/search';\n\nconst SearchSuggestions = ({ suggestions, highlightWord }) => {\n  const { focusedIndex, disableMouseEvents } = useSelector(\n    state => ({\n      focusedIndex: state.search.focusedIndex,\n      disableMouseEvents: state.search.disableMouseEvents,\n    }),\n    shallowEqual\n  );\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"search-suggestions\">\n      {suggestions.map(({ title, description, subtitle, listItem }, index) => (\n        <SearchSuggestion\n          focus={focusedIndex === index}\n          onMouseOver={() => {\n            !disableMouseEvents && dispatch(updateFocusToIndex(index))\n          }}\n          onMouseMove={() => {\n            disableMouseEvents && dispatch(updateDisableMouseEvents(false))\n          }}\n          highlightWord={highlightWord}\n          key={title}\n          title={title}\n          subtitle={subtitle}\n          listItem={listItem}\n          description={description}\n        />\n      ))}\n    </div>\n  );\n};\n\nSearchSuggestions.propTypes = {\n  suggestions: PropTypes.array,\n  highlightWord: PropTypes.string,\n};\n\nexport default SearchSuggestions;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './searchNoResults.scss';\n\nfunction SearchNoResults({title}) {\n  return (\n    <article className=\"search-no-results\">\n      <p className=\"search-no-results__title\">{title}</p>\n    </article>\n  )\n}\n\nSearchNoResults.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default SearchNoResults;\n","export const eventKeys = {\n  'ArrowDown': 'ArrowDown',\n  'ArrowUp': 'ArrowUp',\n};\n","import React, { useEffect, useCallback } from 'react';\nimport {useDispatch, useSelector, shallowEqual} from 'react-redux';\nimport './searchUsers.scss';\nimport {loadUsers} from '../../redux/users/users';\nimport SearchBar from '../search-bar/SearchBar';\nimport SearchSuggestions from '../search-suggestions/SearchSuggestions';\nimport {caseInsensitiveFirstWordMatch} from '../../utilities/utilities';\nimport SearchNoResults from '../search-no-results/SearchNoResults';\nimport {eventKeys} from '../../constants';\nimport {\n  updateSearchSuggestions,\n  updateSearchQuery,\n  focusNextSuggestion,\n  focusPreviousSuggestion,\n  updateDisableMouseEvents\n} from '../../redux/search/search';\nvar debounce = require('lodash.debounce');\n\nfunction SearchUsers({ type, onChange, onClick }) {\n  const dispatch = useDispatch();\n\n  const { searchQuery, searchSuggestions, users } = useSelector(\n    state => ({\n      users: state.users.list,\n      searchQuery: state.search.query,\n      searchSuggestions: state.search.suggestions,\n    }),\n    shallowEqual\n  );\n\n  const setSearchSuggestions = useCallback(\n    (suggestions) => dispatch(updateSearchSuggestions(suggestions)),\n    [dispatch]\n  );\n\n  const setSearchQuery = useCallback(\n    (searchQuery) => dispatch(updateSearchQuery(searchQuery)),\n    [dispatch]\n  );\n\n  // Load users mock data on page load\n  useEffect(() => {\n    dispatch(loadUsers());\n  }, [dispatch]);\n\n  const handleOnChange = useCallback(\n    // Although the demo currently filters from static data locally\n    // usually this happens through an API call in real world applications\n    // Hence a debounce is necessary to avoid API calls on every keystroke\n    // which can be expensive\n    debounce(value => {\n      if (!value.trim()) {\n        setSearchSuggestions(null);\n        return;\n      }\n\n      setSearchQuery(value);\n      setSearchSuggestions(\n        filterSearchSuggestions(users, value)\n      );\n    }, 300),\n    [users]\n  );\n\n\n  function handleKeyDown(event) {\n    if (event.key === eventKeys.ArrowDown) {\n      dispatch(updateDisableMouseEvents(true));\n      dispatch(focusNextSuggestion());\n    } else if (event.key === eventKeys.ArrowUp) {\n      dispatch(updateDisableMouseEvents(true));\n      dispatch(focusPreviousSuggestion());\n    }\n  }\n\n  if (!users.length) {\n    return null;\n  }\n\n  const noSearchResults = (searchQuery && searchSuggestions && searchSuggestions.length === 0);\n\n  return (\n    <React.Fragment>\n      <SearchBar onChange={handleOnChange} onKeyDown={handleKeyDown} />\n      {\n        searchSuggestions && <SearchSuggestions\n          suggestions={searchSuggestions} highlightWord={searchQuery} />\n      }\n      { noSearchResults && <SearchNoResults title=\"No User Found\" /> }\n\n    </React.Fragment>\n  );\n}\n\nfunction findWord(text, word) {\n  return text.match(\n    caseInsensitiveFirstWordMatch(word)\n  ) !== null;\n}\n\nfunction filterSearchSuggestions(users, searchQuery) {\n  return users.reduce((acc, user) => {\n    // Append to accumulator if searchQuery is found in this user\n    const isFoundInList = user.items.filter(item => findWord(item, searchQuery)).length > 0;\n    if (\n      findWord(user.id, searchQuery) ||\n      findWord(user.name, searchQuery) ||\n      findWord(user.address, searchQuery) ||\n      isFoundInList\n    ) {\n      return [\n        ...acc,\n        mapUserToSuggestion(user, isFoundInList, searchQuery),\n      ];\n    }\n\n    // Else return the existing accumulator\n    return acc;\n  }, []);\n}\n\nfunction mapUserToSuggestion(user, isFoundInList = false, searchQuery) {\n  return {\n    title: user.id,\n    subtitle: user.name,\n    listItem: isFoundInList ? `\"${searchQuery}\" found in items`: null,\n    description: user.address,\n    highlightWord: searchQuery,\n  };\n}\n\nexport default SearchUsers;\n","import React from 'react';\r\nimport './styles/reset.scss';\r\nimport './styles/base.scss';\r\nimport './app.scss';\r\nimport SearchUsers from './components/search-users/SearchUsers';\r\n\r\nfunction App() {\r\n  return (\r\n    <main>\r\n      <h4 className=\"hint\">Search Users</h4>\r\n      <p className=\"hint-details\">You can use Mouse or Keyboard Arrow keys (Up/Down) to navigate the list</p>\r\n      <section className=\"search\">\r\n        <SearchUsers />\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport configureStore from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={configureStore()}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport usersReducer from '../redux/users/users';\r\nimport searchReducer from '../redux/search/search';\r\n\r\nexport default function configureStore(initialState={}) {\r\n  return createStore(\r\n    combineReducers({\r\n      users: usersReducer,\r\n      search: searchReducer,\r\n    }),\r\n    initialState,\r\n    applyMiddleware(thunk)\r\n  );\r\n}\r\n"],"sourceRoot":""}